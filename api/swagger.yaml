openapi: 3.0.0
info:
  title: Task Management System API
  description: A RESTful API for managing tasks with versioning and caching support
  version: 1.1.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.example.com
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 255
        description:
          type: string
        status:
          type: string
          enum: [pending, in_progress, completed, cancelled]
        due_date:
          type: string
          format: date-time
        created_by:
          type: string
          format: uuid
        assigned_to:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - title
        - status

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object

    HealthComponent:
      type: object
      properties:
        status:
          type: string
          enum: [UP, DOWN]
        message:
          type: string

  parameters:
    ApiVersion:
      name: Accept
      in: header
      description: API version requested
      required: false
      schema:
        type: string
        example: application/vnd.task.v1.1+json

paths:
  /api/v1/tasks:
    get:
      summary: List tasks
      description: Retrieve a list of tasks with pagination and filtering
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          headers:
            X-API-Version:
              schema:
                type: string
            X-Cache:
              schema:
                type: string
                enum: [HIT, MISS]
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      total_pages:
                        type: integer
                      total_items:
                        type: integer
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    post:
      summary: Create task
      description: Create a new task
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /api/v1/tasks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - $ref: '#/components/parameters/ApiVersion'
    
    get:
      summary: Get task
      description: Retrieve a specific task by ID
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          headers:
            X-API-Version:
              schema:
                type: string
            X-Cache:
              schema:
                type: string
                enum: [HIT, MISS]
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found

    put:
      summary: Update task
      description: Update an existing task
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated
        '404':
          description: Task not found
        '403':
          description: Forbidden

    delete:
      summary: Delete task
      description: Delete an existing task
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Task deleted
        '404':
          description: Task not found
        '403':
          description: Forbidden

  /health:
    get:
      summary: Health check
      description: Get system health status including all components
      tags:
        - System
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [UP, DOWN]
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                  services:
                    type: object
                    properties:
                      database:
                        $ref: '#/components/schemas/HealthComponent'
                      cache:
                        $ref: '#/components/schemas/HealthComponent'
                  system:
                    type: object
                    properties:
                      go_version:
                        type: string
                      num_goroutines:
                        type: integer
                      num_cpu:
                        type: integer
                      heap_in_use:
                        type: integer
                        format: int64
        '503':
          description: System is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 